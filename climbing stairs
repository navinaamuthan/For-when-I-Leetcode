#partly like fibonacci is what i guessed initially. Was wrong, had to get the logic from n-1 steps. So like for every step n-1, we got to take only more step to reach n and that's be f(n). apply that in recursion. 

class Solution {
    public int climbStairs(int n) {
        if(n <= 3){
            return n;
        }
        int a = 3, b = 2;
        for(int i = 0; i < n-3; i++){
            a = a + b;
            b = a - b;
        }
        return a;
    }
}
